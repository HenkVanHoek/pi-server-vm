# .github/workflows/build_release.yml (Forensic Version)

name: Create GitHub Release with Cross-Platform Executables

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os-name }}
    runs-on: ${{ matrix.os-vtu }}
    strategy:
      matrix:
        include:
          - os-name: Linux
            os-vtu: ubuntu-latest
            asset-ext: tar.gz
          - os-name: macOS
            os-vtu: macos-latest
            asset-ext: tar.gz
          - os-name: Windows
            os-vtu: windows-latest
            asset-ext: zip

    steps:
      - name: Check out the repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: pipx install uv

      - name: Install dependencies with uv
        run: uv pip install --system -e .[dev]

      # --- THE ULTIMATE FORENSIC STEP ---
      # This step will run ONLY on the Windows builder. It asks PyInstaller's
      # forensic tool to inspect the Python DLL and report its exact dependencies.
      - name: Run PyInstaller Version Grabber on Windows
        if: runner.os == 'Windows'
        run: |
          echo "--- Running pyi-grab_version for python311.dll ---"
          # The path to the Python DLL is found via the $pythonLocation environment variable
          pyi-grab_version ${{ env.pythonLocation }}\python311.dll
          echo "--- Done ---"
        shell: bash

      - name: Build executables with PyInstaller
        run: python build.py

      - name: Create package directory
        run: mkdir package

      - name: Create Archive
        uses: thedoctor0/zip-release@master
        with:
          type: '${{ matrix.asset-ext }}'
          directory: 'dist'
          filename: '../package/executables-${{ matrix.os-name }}.${{ matrix.asset-ext }}'

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: executables-${{ matrix.os-name }}
          path: ./package/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: artifacts/**/*
