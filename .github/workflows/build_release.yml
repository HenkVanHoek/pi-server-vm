name: Create GitHub Release with Cross-Platform Executables

on:
    push:
        tags:
            - "v*.*.*" # Runs on version tags like v1.3.1, v1.4.0, etc.

jobs:
    # Job 1: Build the executables on all three platforms
    build:
        name: Build on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - name: Check out the repository code
              uses: actions/checkout@v4

            - name: Set up Python 3.11
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: pip install -e .[dev]

            - name: Build executables with PyInstaller
              run: python build.py

            - name: Prepare artifact for upload
              # On Windows, executables end with .exe. On Linux/macOS, they do not.
              # We create a zip file for each OS to handle this consistently.
              run: |
                  if [ "$RUNNER_OS" == "Windows" ]; then
                    7z a executables-${{ runner.os }}.zip ./dist/*
                  else
                    zip -r executables-${{ runner.os }}.zip ./dist
                  fi
              shell: bash

            - name: Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                  name: executables-${{ runner.os }}
                  path: executables-${{ runner.os }}.zip

    # Job 2: Create the GitHub Release after all builds are successful
    release:
        name: Create GitHub Release
        runs-on: ubuntu-latest
        needs: build # This job will not run until the 'build' job is complete

        steps:
            - name: Download all build artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts # Downloads all artifacts into an 'artifacts' directory

            - name: Create Release and Upload Assets
              # This powerful action creates the release and attaches the files
              uses: softprops/action-gh-release@v2
              with:
                  # This uses the content of the Git tag for the release notes
                  generate_release_notes: true
                  # Find all the zip files we created and upload them
                  files: artifacts/**/*.zip
